name: Monitor Cloudflare Pages Build

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

env:
  CLOUDFLARE_ACCOUNT_ID: '96046731d13e851830b647b287048172'
  CLOUDFLARE_PROJECT_NAME: 'lucaverse-com'

jobs:
  monitor-build:
    name: Monitor Cloudflare Pages Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify local build
        run: npm run build

      - name: Monitor Cloudflare Pages Build
        uses: ./.github/actions/monitor-cloudflare-build
        with:
          account-id: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          project-name: ${{ env.CLOUDFLARE_PROJECT_NAME }}
          api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          max-wait-minutes: 10
          poll-interval-seconds: 30

      - name: Notify Build Status
        if: always()
        uses: ./.github/actions/notify-build-status
        with:
          build-status: ${{ steps.monitor-build.outcome }}
          commit-sha: ${{ github.sha }}
          commit-message: ${{ github.event.head_commit.message }}
          author: ${{ github.event.head_commit.author.name }}

  # Fallback job using existing Node.js script if custom actions aren't available
  fallback-monitor:
    name: Fallback Build Monitor
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: failure() # Only run if the main job fails

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run build monitor script
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: node scripts/deploy-workflow.js "auto: ${{ github.event.head_commit.message }}"

  # Claude MCP Integration Job (if available)
  claude-monitor:
    name: Claude MCP Build Monitor
    runs-on: ubuntu-latest
    timeout-minutes: 12
    if: always() # Always run regardless of other jobs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Trigger Claude MCP Monitoring
        uses: ./.github/actions/claude-mcp-monitor
        with:
          commit-sha: ${{ github.sha }}
          commit-message: ${{ github.event.head_commit.message }}
          author: ${{ github.event.head_commit.author.name }}
          trigger-reason: "auto-commit-main"