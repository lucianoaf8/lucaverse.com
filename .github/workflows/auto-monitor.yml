name: Auto Monitor Every Main Commit

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  CLOUDFLARE_ACCOUNT_ID: '96046731d13e851830b647b287048172'
  CLOUDFLARE_PROJECT_NAME: 'lucaverse-com'

jobs:
  # Primary monitoring job using existing Node.js script
  monitor-deployment:
    name: 🚀 Monitor Cloudflare Pages Build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🔨 Verify Local Build
        run: npm run build

      - name: 📊 Monitor Cloudflare Pages Deployment
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          echo "🚀 Starting automatic build monitoring for commit: ${{ github.sha }}"
          echo "📝 Commit message: ${{ github.event.head_commit.message }}"
          echo "👤 Author: ${{ github.event.head_commit.author.name }}"
          echo "⏰ Triggered at: $(date -u)"
          echo ""
          node scripts/deploy-workflow.js "auto-monitor: ${{ github.event.head_commit.message }}"

      - name: 📋 Create Job Summary
        if: always()
        run: |
          echo "# 🎯 Automatic Build Monitoring Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Commit Information" >> $GITHUB_STEP_SUMMARY
          echo "- **SHA:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Author:** ${{ github.event.head_commit.author.name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Message:** ${{ github.event.head_commit.message }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp:** $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Monitoring Result" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ **Status:** Build monitoring completed successfully" >> $GITHUB_STEP_SUMMARY
            echo "🌐 **Result:** Lucaverse.com has been updated and is live" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Status:** Build monitoring detected issues" >> $GITHUB_STEP_SUMMARY
            echo "🔍 **Action Required:** Check the logs above for details" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*This monitoring was automatically triggered by the commit to main branch*" >> $GITHUB_STEP_SUMMARY

  # Notification job that always runs
  notify-status:
    name: 📢 Notify Build Status
    runs-on: ubuntu-latest
    needs: [monitor-deployment]
    if: always()

    steps:
      - name: 📋 Log Final Status
        run: |
          echo "==================================="
          echo "🎯 AUTOMATIC BUILD MONITORING COMPLETE"
          echo "==================================="
          echo "📝 Commit: ${{ github.event.head_commit.message }}"
          echo "👤 Author: ${{ github.event.head_commit.author.name }}"
          echo "🔗 SHA: ${{ github.sha }}"
          echo "⏰ Time: $(date -u)"
          echo ""
          if [ "${{ needs.monitor-deployment.result }}" == "success" ]; then
            echo "✅ RESULT: Build monitoring SUCCESS"
            echo "🌐 Lucaverse.com is live and updated"
          else
            echo "❌ RESULT: Build monitoring FAILED"
            echo "🚨 Deployment requires attention"
            exit 1
          fi
          echo "==================================="

  # Claude integration hint job
  claude-integration:
    name: 🤖 Claude MCP Integration Ready
    runs-on: ubuntu-latest
    needs: [monitor-deployment]
    if: always()

    steps:
      - name: 📤 Prepare Claude MCP Monitoring Data
        run: |
          echo "🤖 Claude MCP integration data prepared:"
          echo "  - Commit SHA: ${{ github.sha }}"
          echo "  - Project: lucaverse-com"
          echo "  - Account ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}"
          echo "  - Status: ${{ needs.monitor-deployment.result }}"
          echo ""
          echo "💡 Claude Code can now use MCP servers to verify:"
          echo "  - cloudflare-observability: Real-time build logs"
          echo "  - cloudflare-builds: Deployment status"
          echo "  - cloudflare-graphql: Analytics and metrics"